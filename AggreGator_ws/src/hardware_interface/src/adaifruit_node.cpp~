#include "ros/ros.h"

int main(int argc, char** argv)
{
    /*
     * Initilization
     */

    //Initilize the adafruit node
    ros::init(argc, argv, "remote_control_node");

    //Node handler this is how you work with ROS
    ros::NodeHandle n;

    //Get the parameters
    //Send frequence
    double temp;
    n.param<double>("/remote_control/send_freq", temp, 0.1);
    send_time.fromSec(1 / temp);
    ROS_INFO("Setting send period to %f, (frequency: %f)", send_time.toSec(), temp);

    //mapping
    n.param<int32_t>("/remote_control/xbox_controller/mapping", mapping, 1);
    if(mapping < 1 || mapping > 3)
        mapping = 1;

    ROS_INFO("Xbox controller set to order %i mapping", mapping);

    //Set up subscriber, listens to joy topic, buffer only 10 messages, us XboxCallback
    ros::Subscriber joy_sub = n.subscribe<sensor_msgs::Joy>("joy", 1000, XboxCallback);

    //Set up publisher on motor_rc, buffer up to 1000 msgs
    wheel_motor_pub = n.advertise<remote_control::WheelMotor>("wheel_motor_rc", 1000);

    //Set up publisher on linear_actuator_rc
    linear_actuator_pub = n.advertise<std_msgs::Int16>("linear_actuator_rc", 1000);

    //Set up publisher on bucket_motor_rc
    bucket_motor_pub = n.advertise<std_msgs::Int16>("bucket_motor_rc", 1000);

    //Initilize time
    last_time = ros::Time::now();
    current_time = last_time;


    /*
     * Main loop
     */
    while (ros::ok())
    {
        WriteMotorValue();
        ros::spinOnce();
    }
}
